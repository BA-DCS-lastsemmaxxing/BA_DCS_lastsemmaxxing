services:
  # Backend Service (Flask)
  backend:
    build:
      context: .  # Use the current directory
      dockerfile: backend/Dockerfile  # Build from the backend's Dockerfile
    volumes:
      - input_data:/app/backend/input_data  # Mount Docker volume input_data to the backend container
      - output_data:/app/backend/output_data  # Mount Docker volume output_data to the backend container
    ports:
      - "5001:5001"  # Expose Flask app on port 5001
    environment:
      - DB_HOST=terraform-20250216045524406600000003.cpk00i8mcpir.ap-southeast-1.rds.amazonaws.com  # Your RDS endpoint
      - DB_USER=admin  # Your DB username
      - DB_PASSWORD=testpassword  # Your DB password
      - DB_NAME=user_database  # Your DB name

  # Frontend Service (React app)
  frontend:
    build:
      context: ./frontend/my-app  # Build from the frontend/my-app directory
      dockerfile: Dockerfile  # Use the Dockerfile inside the frontend/my-app directory
    ports:
      - "3000:3000"  # Expose Next.js app on port 3000
    depends_on:
      - backend  # Wait for the backend to be ready before starting the frontend
    command: npx serve@latest out  # Serve the statically exported app

# Define Docker-managed volumes
volumes:
  input_data:
  output_data:
