name: Deploy Static Website to AWS

on:
  push:
    branches:
      - main
      - frontend-cicd # to be removed

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get AWS Region from Terraform
        id: tf_output
        run: echo "AWS_REGION=$(terraform output -raw aws_region)" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: var.aws_region

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Build React App
        run: npm run build

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Initialise Terraform
        run: terraform init

      - name: Validate Terraform Configuration
        run: terraform validate

      - name: Plan Terraform Deployment
        run: terraform plan -out=tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: var.aws_region

      # Save the plan output as an artifact
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan
          path: tfplan

  apply:
    runs-on: ubuntu-latest
    needs: plan # This job depends on the plan job
    environment: production # Manual approval required before this job
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set AWS credentials for Terraform & AWS CLI
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: var.aws_region

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      # Download the Terraform Plan from the previous job
      - name: Download Terraform Plan
        uses: actions/download-artifact@v2
        with:
          name: terraform-plan
          path: .

      # Apply the Terraform Plan
      - name: Apply Terraform Plan
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: var.aws_region
